name: Prowler Reusable Workflow

on:
  workflow_call:
    inputs:
      cloud_provider:
        required: true
        type: string
        description: 'Cloud Provider'
      project_id:
        required: false
        type: string
        description: 'Project ID for GCP'
      aws_region:
        required: false
        type: string
        description: 'AWS Region'
      access_token_lifetime:
        required: false
        type: number
        default: 300
        description: 'Duration for which an access token remains valid.'
      role_duration_seconds:
        required: false
        type: number
        default: 900
        description: 'Duration of the session.'

    secrets:
      WIP:
        required: false
        description: 'WIP Connected with Service Account'
      SERVICE_ACCOUNT:
        required: false
        description: 'GCP service account'
      BUILD_ROLE:
        required: false
        description: 'AWS OIDC role for AWS authentication.'
      PROWLER_ROLE_ARN:
        required: false
        description: 'AWS IAM role for running prowler.'
      AWS_ACCESS_KEY_ID:
        required: false
        description: 'AWS Access Key ID'
      AWS_SECRET_ACCESS_KEY:
        required: false
        description: 'AWS Secret Access Key'
      AWS_SESSION_TOKEN:
        required: false
        description: 'AWS Session Token'
      AZURE_CLIENT_ID:
        required: false
        description: 'Azure Client ID'
      AZURE_CLIENT_SECRET:
        required: false
        description: 'Azure Client Secret'
      AZURE_TENANT_ID:
        required: false
        description: 'Azure Tenant ID'

jobs:
  prowler:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install pip
        run: |
          sudo apt update
          sudo apt install -y python3 python3-pip

      - name: Install Prowler
        run: |
          python3 -m pip install --upgrade pip
          pip3 install prowler

      - name: Authenticate with Google Cloud
        if: ${{ inputs.cloud_provider == 'gcp' }}
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.WIP }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
          access_token_lifetime: ${{ inputs.access_token_lifetime }}
          project_id: ${{ inputs.project_id }}

      - name: Install AWS CLI
        if: ${{ inputs.cloud_provider == 'aws' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          role-to-assume: ${{ secrets.BUILD_ROLE }}
          aws-region: ${{ inputs.aws_region }}
          role-duration-seconds: ${{ inputs.role_duration_seconds }}
          role-skip-session-tagging: true

      - name: Run Prowler for GCP
        if: ${{ inputs.cloud_provider == 'gcp' }}
        id: prowler-gcp
        run: |
          prowler gcp \
          --project-ids ${{ inputs.project_id }} \
          -o ${{ github.workspace }}/report/
        continue-on-error: true

      - name: Running Prowler for AWS
        env:
          ACCOUNT_ID: ${{ secrets.TARGET_ACCOUNT_ID }}
        run: |
          for ACCOUNTID in $ACCOUNT_ID; do
          {
            echo $ACCOUNTID
            prowler aws \
              --role ${{ secrets.PROWLER_ROLE_ARN }} \
              --output-directory /home/runner/work/prowler/prowler/output \
              --output-modes html csv json-asff \
              --ignore-exit-code-3
          }
          done

      - name: Run Prowler for Azure
        if: ${{ inputs.cloud_provider == 'azure' }}
        id: prowler-azure
        run: |
          export AZURE_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}
          export AZURE_CLIENT_SECRET=${{ secrets.AZURE_CLIENT_SECRET }}
          export AZURE_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}
          prowler azure --sp-env-auth -o ${{ github.workspace }}/report/
        continue-on-error: true

      - name: Upload Artifact
        if: env.ENABLE_S3_UPLOAD == 'false'
        uses: actions/upload-artifact@v4
        with:
          name: prowler-reports
          path: /home/runner/work/prowler/prowler/output/
          retention-days: 1

      - name: Upload Prowler Results to AWS S3
        if: env.ENABLE_S3_UPLOAD == 'true'
        run: |
          aws s3 cp /home/runner/work/prowler/prowler/output/ s3://${{ secrets.S3_BUCKET_NAME }}/ --recursive

    env:
      ENABLE_S3_UPLOAD: ${{ secrets.ENABLE_S3_UPLOAD }}
...